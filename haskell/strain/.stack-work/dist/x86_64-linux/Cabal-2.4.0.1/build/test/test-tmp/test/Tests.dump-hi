
==================== FINAL INTERFACE ====================
2019-02-22 13:19:39.829914736 UTC

interface main:Main 8063
  interface hash: 8d9bc2bb5d8706043ef77fd8264d878b
  ABI hash: 3437e1c42f787882daf6345ddd972038
  export-list hash: b8011759d29c9dcd0bd03bcfa35819df
  orphan hash: 0d715dc4b293f3b92f90d55c8e8b3072
  flag hash: 2057c0c91ea65bf1eca2fdb05409cc1d
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: HUnit-1.6.0.0 QuickCheck-2.12.6.1
                      ansi-terminal-0.8.2 array-0.5.3.0 base-4.12.0.0 call-stack-0.1.0
                      clock-0.7.2 colour-2.3.4 containers-0.6.0.1 deepseq-1.4.4.0
                      directory-1.3.3.0 erf-2.0.0.0 filepath-1.4.2.1 ghc-boot-th-8.6.3
                      ghc-prim-0.5.3 hspec-2.6.1 hspec-core-2.6.1
                      hspec-expectations-0.8.2 integer-gmp-1.0.2.0 pretty-1.1.3.6
                      primitive-0.6.4.0 quickcheck-io-0.2.0 random-1.1 setenv-0.1.1.3
                      stm-2.5.0.0 strain-0.1.0.3 template-haskell-2.14.0.0 tf-random-0.5
                      time-1.8.0.2 transformers-0.5.5.0 unix-2.7.2.2
orphans: colour-2.3.4:Data.Colour
         quickcheck-io-0.2.0:Test.QuickCheck.IO
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         transformers-0.5.5.0:Control.Monad.Trans.Error
         stm-2.5.0.0:Control.Monad.STM base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: base-4.12.0.0:Control.Applicative
                         base-4.12.0.0:Data.Complex base-4.12.0.0:Data.Functor.Compose
                         base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         clock-0.7.2:System.Clock containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal
                         ghc-boot-th-8.6.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.3:GHC.LanguageExtensions.Type
                         hspec-core-2.6.1:Test.Hspec.Core.Example
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
import  -/  base-4.12.0.0:Data.List ce2c69da408fdc014383cede9e1f9adf
import  -/  base-4.12.0.0:Data.OldList c2cab40fed7d27b5e717779f9a3c09ea
import  -/  base-4.12.0.0:GHC.Base cc906f98291a1b830546e99a96674547
import  -/  base-4.12.0.0:GHC.Err 28d622b06927ca4c3b335ec5326c34b2
import  -/  base-4.12.0.0:GHC.List 734a72beb76d276fb4a0ba2689a5711f
import  -/  base-4.12.0.0:GHC.Real f7dad82c1d43d80823865d3e6c6636e0
import  -/  base-4.12.0.0:Prelude 5c01365ec01f83bd405ac01cbb9a8d76
import  -/  ghc-prim-0.5.3:GHC.Classes e0d9c979f6368701f34fa421754d2cce
import  -/  ghc-prim-0.5.3:GHC.Types 57064c9f957b09bc2e360061ad5cae0b
import  -/  hspec-2.6.1:Test.Hspec c52a199c01d155b6c376cbd0a4a261b7
import  -/  hspec-2.6.1:Test.Hspec.Runner 39e1760b5bfbd4f0824e3dccdadb61a9
import  -/  hspec-core-2.6.1:Test.Hspec.Core.Config.Options 07b070c47ecdbfb1b5f2b3639db0332c
import  -/  hspec-core-2.6.1:Test.Hspec.Core.Runner 35c8ba26e7391d11dec0c73fd7ee36af
import  -/  hspec-core-2.6.1:Test.Hspec.Core.Spec c97919274f9cd42d688210d5a3e73f0b
import  -/  hspec-core-2.6.1:Test.Hspec.Core.Spec.Monad 2def4346bff2afc244a1f1eb77d09dc0
import  -/  hspec-expectations-0.8.2:Test.Hspec.Expectations 6ed51b2bcb1c0ac264d079371bd72d2a
import  -/  strain-0.1.0.3:Strain 1010a078b9c93c1014cfdecf1fff1602
89b0ef3f24a8a894ff241b7eb7dab946
  $seven :: GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (n :: GHC.Types.Int) ->
                 case n of wild2 { GHC.Types.I# x1 ->
                 case GHC.Prim.remInt# x1 2# of wild {
                   DEFAULT -> GHC.Types.False 0# -> GHC.Types.True } }) -}
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
d5625da4816852c0d60cfa86340c09c9
  main :: GHC.Types.IO ()
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
ba4f4ff480940963a3812cb64567d2c7
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Core.Runner.hspecWith1
                   Main.main324
                   Main.main2
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                       <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                       <GHC.Types.IO>_R
                                                       <()>_N) ; Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N) <()>_N))) -}
449797dee086345e079d04cd49b18d57
  main10 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main200
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (<GHC.Prim.State# GHC.Prim.RealWorld>_R
                                   ->_R ((#,#)
                                           <'GHC.Types.TupleRep '[]>_R
                                           <'GHC.Types.LiftedRep>_R
                                           <GHC.Prim.State# GHC.Prim.RealWorld>_R
                                           ((,)
                                              <()>_R
                                              ([(Test.Hspec.Core.Tree.Tree
                                                   (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                                                    ->_R <GHC.Types.IO ()>_R)
                                                   (Test.Hspec.Core.Tree.Item
                                                      (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R)_R)_R))))
                   Main.main11) -}
a465d36a8e20bab8200055ca61c3abed
  main100 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("zombies"#) -}
1cfd8e5ac76ca703108f678d1c986b4c
  main101 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main102) -}
1fa2f5a136b45acdf42ff52cc33bc6f4
  main102 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("zebra"#) -}
7398763b26e8e48ae1520f37b3c4f115
  main103 :: [GHC.Types.Char] -> GHC.Types.Bool
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: [GHC.Types.Char]) ->
                 case Data.OldList.isPrefixOf
                        @ GHC.Types.Char
                        GHC.Classes.$fEqChar
                        Main.main104
                        x of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
27a4559d40920e700edfe64bb9e7ee7a
  main104 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main105) -}
0cd06cd5639af9aaa03136ca18052481
  main105 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("z"#) -}
df10166f33b2f1afd9d7959fe3a94901
  main106 ::
    GHC.Maybe.Maybe Test.Hspec.Core.Example.Location.Location
  {- Unfolding: (Test.Hspec.Core.Tree.location11 Main.main107) -}
cff72d8f3e5d1a1ad8c1d6667dc7e110
  main107 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.location1
                   Main.main108) -}
3673739099d15177807c7fd55ebaf628
  main108 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem14
                   Test.Hspec.Core.Tree.specItem11
                   Main.main109) -}
2abaef161ad09411f2e19b285b535d4f
  main109 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.fit12
                   Test.Hspec.Core.Spec.fit8
                   Main.main110) -}
d58743f37b20c1808de88ae40580a4c2
  main11 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main183
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (<GHC.Prim.State# GHC.Prim.RealWorld>_R
                                   ->_R ((#,#)
                                           <'GHC.Types.TupleRep '[]>_R
                                           <'GHC.Types.LiftedRep>_R
                                           <GHC.Prim.State# GHC.Prim.RealWorld>_R
                                           ((,)
                                              <()>_R
                                              ([(Test.Hspec.Core.Tree.Tree
                                                   (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                                                    ->_R <GHC.Types.IO ()>_R)
                                                   (Test.Hspec.Core.Tree.Item
                                                      (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R)_R)_R))))
                   Main.main12) -}
9193f686bfffa8d44bde9f7af6d8aab1
  main110 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main111
                   GHC.Stack.Types.EmptyCallStack) -}
12563f464aca6c845317a0bf82256fd2
  main111 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main42
                   Main.main112
                   Main.main40
                   Main.main112
                   Main.main66) -}
e2d0fea86fec82628118a5c6cc5ab987
  main112 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 50#) -}
e31c5b2b1f3ff230ec99a058969c32f4
  main113 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main51
                   Main.main114) -}
ab7bef93bfba935e10811687f4d28a5c
  main114 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main115) -}
3ccd5564401252ca60b0d040bb410a7e
  main115 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("iscard strings"#) -}
dcfe46a83702ea7c8651f8e043f9b73a
  main116 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main117
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
5f6fa3872a64d759266ac183bcc8e828
  main117 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main118) -}
c5ceb907dd94c08792841597631249f2
  main118 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main139
                   Main.main131
                   (GHC.Maybe.Nothing @ GHC.Types.Bool)
                   GHC.Types.False
                   Main.main119
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Test.Hspec.Core.Example.Result>_R))) -}
2ac1063db0d92b54a660e1c85eabc3de
  main119 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   ((<Test.Hspec.Expectations.Expectation>_R
                     ->_R <Test.Hspec.Core.Example.Params>_R
                     ->_R <(Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation
                            -> GHC.Types.IO ())
                           -> GHC.Types.IO ()>_R
                     ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Test.Hspec.Core.Example.Result>_R)) ; Sym (Test.Hspec.Core.Example.N:Example[0]
                                                                                   <Test.Hspec.Expectations.Expectation>_N))
                   Main.main120 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
7c27958d841b3116873f83c2cd9381f3
  main12 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main164
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (<GHC.Prim.State# GHC.Prim.RealWorld>_R
                                   ->_R ((#,#)
                                           <'GHC.Types.TupleRep '[]>_R
                                           <'GHC.Types.LiftedRep>_R
                                           <GHC.Prim.State# GHC.Prim.RealWorld>_R
                                           ((,)
                                              <()>_R
                                              ([(Test.Hspec.Core.Tree.Tree
                                                   (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                                                    ->_R <GHC.Types.IO ()>_R)
                                                   (Test.Hspec.Core.Tree.Item
                                                      (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R)_R)_R))))
                   Main.main13) -}
58cab25ca68dfa12c12709f9b29f571b
  main120 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Classes.$fEq[]_$s$c== Main.main_w3 Main.main125 of wild {
                   GHC.Types.False
                   -> case GHC.Show.$wshowSignedInt
                             0#
                             1#
                             Main.main122 of ww2 { (#,#) ww3 ww4 ->
                      let {
                        expectedMsg :: [GHC.Types.Char]
                        = GHC.Types.: @ GHC.Types.Char ww3 ww4
                      } in
                      let {
                        expectedMsg1 :: GHC.Base.String
                        = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__3 expectedMsg
                      } in
                      case Test.HUnit.Lang.assertEqual_go expectedMsg1 of wild2 { () ->
                      case Main.main_w3 of wild1 {
                        []
                        -> case Test.HUnit.Lang.assertEqual_go
                                  Main.main_expectedMsg of wild3 { () ->
                           Main.main121 eta2 expectedMsg1 Main.main_expectedMsg }
                        : x xs
                        -> let {
                             actualMsg :: [GHC.Types.Char]
                             = case x of ww { GHC.Types.I# ww1 ->
                               case GHC.Show.$wshowSignedInt
                                      0#
                                      ww1
                                      (Main.main_showl1 xs) of ww7 { (#,#) ww8 ww9 ->
                               GHC.Types.: @ GHC.Types.Char ww8 ww9 } }
                           } in
                           let {
                             actualMsg1 :: GHC.Base.String
                             = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__3 actualMsg
                           } in
                           case Test.HUnit.Lang.assertEqual_go actualMsg1 of wild3 { () ->
                           Main.main121 eta2 expectedMsg1 actualMsg1 } } } }
                   GHC.Types.True -> (# eta2, GHC.Tuple.() #) }) -}
3ffae973de8c0777b2388695e2467daf
  main121 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> GHC.Base.String
    -> GHC.Base.String
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <B,U><B,U><B,U>x -}
691e5ef389fef05a2ac2981fc07c6c13
  main122 :: GHC.Base.String
  {- Unfolding: (Main.main_showl1 Main.main123) -}
9e42227c8af2017715dc15e4dcc59ddd
  main123 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main124
                   (GHC.Types.[] @ GHC.Types.Int)) -}
6e928b7b49f08f5845c431ffe1b98808
  main124 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3#) -}
fb8828c8c745d2e09419d0df5a84a68f
  main125 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main126
                   Main.main123) -}
efd2868bb1e4918046f5f5856bd9e1ae
  main126 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
b38bde5369cb009bb0cd6bd009552cfd
  main127 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main126
                   Main.main128) -}
f8d45e526b23dd9cbd0e85ec746ab1d5
  main128 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main129
                   Main.main123) -}
989c78dba6b87b6bb973025645ea1934
  main129 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
4702a0cb89965e9db11e157727d1d816
  main13 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main142
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (<GHC.Prim.State# GHC.Prim.RealWorld>_R
                                   ->_R ((#,#)
                                           <'GHC.Types.TupleRep '[]>_R
                                           <'GHC.Types.LiftedRep>_R
                                           <GHC.Prim.State# GHC.Prim.RealWorld>_R
                                           ((,)
                                              <()>_R
                                              ([(Test.Hspec.Core.Tree.Tree
                                                   (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                                                    ->_R <GHC.Types.IO ()>_R)
                                                   (Test.Hspec.Core.Tree.Item
                                                      (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R)_R)_R))))
                   Main.main14) -}
924e8ceb487073ab2494b08bda949e4d
  main130 :: GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>,
     Unfolding: (\ (x :: GHC.Types.Int) ->
                 case x of wild2 { GHC.Types.I# x1 ->
                 case GHC.Prim.remInt# x1 2# of wild {
                   DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } }) -}
216224629b1cfe443489f8795f3b90c6
  main131 ::
    GHC.Maybe.Maybe Test.Hspec.Core.Example.Location.Location
  {- Unfolding: (Test.Hspec.Core.Tree.location11 Main.main132) -}
f8a4b2f144a8da25e7e18de1862633e0
  main132 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.location1
                   Main.main133) -}
794be8677fd302fe6e89aef7c155910f
  main133 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem14
                   Test.Hspec.Core.Tree.specItem11
                   Main.main134) -}
4ccd1cfeadb6c71a08f34a672aed30cc
  main134 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.fit12
                   Test.Hspec.Core.Spec.fit8
                   Main.main135) -}
17a96be005aed79a0709ae0f9982bbdd
  main135 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main136
                   GHC.Stack.Types.EmptyCallStack) -}
3d3e86c9a5f8a5f8dcf889c75ec1e50a
  main136 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main42
                   Main.main138
                   Main.main40
                   Main.main138
                   Main.main137) -}
0010877f1c4d33efba54120298ee08fb
  main137 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 40#) -}
6be65d20fcc47141526a740f41a44017
  main138 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 47#) -}
6b456f9133ee9034b70129285cbad899
  main139 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main51
                   Main.main140) -}
a9af95402dfdb48ba3ae190ae5121ad0
  main14 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main116
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (<GHC.Prim.State# GHC.Prim.RealWorld>_R
                                   ->_R ((#,#)
                                           <'GHC.Types.TupleRep '[]>_R
                                           <'GHC.Types.LiftedRep>_R
                                           <GHC.Prim.State# GHC.Prim.RealWorld>_R
                                           ((,)
                                              <()>_R
                                              ([(Test.Hspec.Core.Tree.Tree
                                                   (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                                                    ->_R <GHC.Types.IO ()>_R)
                                                   (Test.Hspec.Core.Tree.Item
                                                      (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R)_R)_R))))
                   Main.main15) -}
41cd1e8cf266d51281bfc01128a5a7a4
  main140 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main141) -}
2565600cf6032f8b55f7df1502dffa95
  main141 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("iscard neither first nor last"#) -}
e3ba3c7a0291efbceaf38771c46b8ceb
  main142 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main143
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
c76ca91431de6b7b0d033a3d3f1e8e75
  main143 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main144) -}
97579f378056f0db41fc5e055d6b3af0
  main144 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main161
                   Main.main154
                   (GHC.Maybe.Nothing @ GHC.Types.Bool)
                   GHC.Types.False
                   Main.main145
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Test.Hspec.Core.Example.Result>_R))) -}
c3da43867f0919e2a5b2acf39101757a
  main145 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   ((<Test.Hspec.Expectations.Expectation>_R
                     ->_R <Test.Hspec.Core.Example.Params>_R
                     ->_R <(Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation
                            -> GHC.Types.IO ())
                           -> GHC.Types.IO ()>_R
                     ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Test.Hspec.Core.Example.Result>_R)) ; Sym (Test.Hspec.Core.Example.N:Example[0]
                                                                                   <Test.Hspec.Expectations.Expectation>_N))
                   Main.main146 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
271274bd0730ee6493a210059b26f699
  main146 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Classes.$fEq[]_$s$c== Main.main_w5 Main.main153 of wild {
                   GHC.Types.False
                   -> case GHC.Show.$wshowSignedInt
                             0#
                             1#
                             Main.main148 of ww2 { (#,#) ww3 ww4 ->
                      let {
                        expectedMsg :: [GHC.Types.Char]
                        = GHC.Types.: @ GHC.Types.Char ww3 ww4
                      } in
                      let {
                        expectedMsg1 :: GHC.Base.String
                        = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__3 expectedMsg
                      } in
                      case Test.HUnit.Lang.assertEqual_go expectedMsg1 of wild2 { () ->
                      case Main.main_w5 of wild1 {
                        []
                        -> case Test.HUnit.Lang.assertEqual_go
                                  Main.main_expectedMsg of wild3 { () ->
                           Main.main147 eta2 expectedMsg1 Main.main_expectedMsg }
                        : x xs
                        -> let {
                             actualMsg :: [GHC.Types.Char]
                             = case x of ww { GHC.Types.I# ww1 ->
                               case GHC.Show.$wshowSignedInt
                                      0#
                                      ww1
                                      (Main.main_showl1 xs) of ww7 { (#,#) ww8 ww9 ->
                               GHC.Types.: @ GHC.Types.Char ww8 ww9 } }
                           } in
                           let {
                             actualMsg1 :: GHC.Base.String
                             = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__3 actualMsg
                           } in
                           case Test.HUnit.Lang.assertEqual_go actualMsg1 of wild3 { () ->
                           Main.main147 eta2 expectedMsg1 actualMsg1 } } } }
                   GHC.Types.True -> (# eta2, GHC.Tuple.() #) }) -}
af8bfae0b59383fcca2b1e47005ddcda
  main147 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> GHC.Base.String
    -> GHC.Base.String
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <B,U><B,U><B,U>x -}
3d1f9d1030d3b41b47032b4cf71124dc
  main148 :: GHC.Base.String
  {- Unfolding: (Main.main_showl1 Main.main149) -}
edbafacd10bb3ebe22efabd6927744fd
  main149 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main124
                   Main.main150) -}
fb1359c167b1168f38566ff75507389f
  main15 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main72
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (<GHC.Prim.State# GHC.Prim.RealWorld>_R
                                   ->_R ((#,#)
                                           <'GHC.Types.TupleRep '[]>_R
                                           <'GHC.Types.LiftedRep>_R
                                           <GHC.Prim.State# GHC.Prim.RealWorld>_R
                                           ((,)
                                              <()>_R
                                              ([(Test.Hspec.Core.Tree.Tree
                                                   (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                                                    ->_R <GHC.Types.IO ()>_R)
                                                   (Test.Hspec.Core.Tree.Item
                                                      (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R)_R)_R))))
                   Main.main16) -}
d4b2572f77c8bb404ee0f3b4db588d58
  main150 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main40
                   Main.main151) -}
7c89ca4cfce28e2e856615d01c39c64e
  main151 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main152
                   (GHC.Types.[] @ GHC.Types.Int)) -}
81f43cbc3eab9b228a472b2d654154ce
  main152 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 7#) -}
fbdcc9dbf734dc3e24c7cab98630f658
  main153 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main126
                   Main.main149) -}
3050b07b0c3a56bddf967a066989cdfb
  main154 ::
    GHC.Maybe.Maybe Test.Hspec.Core.Example.Location.Location
  {- Unfolding: (Test.Hspec.Core.Tree.location11 Main.main155) -}
0e03e9796889fe932cd55e028f701e05
  main155 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.location1
                   Main.main156) -}
ec05de31ec1dc3fdc0168439ad63a89b
  main156 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem14
                   Test.Hspec.Core.Tree.specItem11
                   Main.main157) -}
2a4f61c5c6bf73b6328adb1954af49e3
  main157 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.fit12
                   Test.Hspec.Core.Spec.fit8
                   Main.main158) -}
f5140900d14b56e4b16bdcf271803e3a
  main158 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main159
                   GHC.Stack.Types.EmptyCallStack) -}
510885332f96e810185b7e6bcf479f2e
  main159 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main42
                   Main.main160
                   Main.main40
                   Main.main160
                   Main.main66) -}
4552a2143157d1533d02c60872e3a7bf
  main16 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main52
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (<GHC.Prim.State# GHC.Prim.RealWorld>_R
                                   ->_R ((#,#)
                                           <'GHC.Types.TupleRep '[]>_R
                                           <'GHC.Types.LiftedRep>_R
                                           <GHC.Prim.State# GHC.Prim.RealWorld>_R
                                           ((,)
                                              <()>_R
                                              ([(Test.Hspec.Core.Tree.Tree
                                                   (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                                                    ->_R <GHC.Types.IO ()>_R)
                                                   (Test.Hspec.Core.Tree.Item
                                                      (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R)_R)_R))))
                   Main.main17
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (<GHC.Prim.State# GHC.Prim.RealWorld>_R
                                   ->_R ((#,#)
                                           <'GHC.Types.TupleRep '[]>_R
                                           <'GHC.Types.LiftedRep>_R
                                           <GHC.Prim.State# GHC.Prim.RealWorld>_R
                                           ((,)
                                              <()>_R
                                              ([(Test.Hspec.Core.Tree.Tree
                                                   (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                                                    ->_R <GHC.Types.IO ()>_R)
                                                   (Test.Hspec.Core.Tree.Item
                                                      (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R)_R)_R))))) -}
d786d3117c61f78d192e50991f6aac52
  main160 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 44#) -}
e3e672f9bc1edce9ef71504130c31d48
  main161 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main51
                   Main.main162) -}
1ca46213c3153a8b90ffefdc0d7e06bd
  main162 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main163) -}
d74312e5d6cddaf155644b9eeaa469e9
  main163 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("iscard nothing"#) -}
e3703c9781ed197354011c69f24262bc
  main164 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main165
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
eb45c46f4ccfa4eef99f14abebfa9f13
  main165 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main166) -}
63f5aa20639e9a805ae5a5cb82b35ba0
  main166 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main180
                   Main.main172
                   (GHC.Maybe.Nothing @ GHC.Types.Bool)
                   GHC.Types.False
                   Main.main167
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Test.Hspec.Core.Example.Result>_R))) -}
525d1cf576f41100a8d10670acd5ec50
  main167 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   ((<Test.Hspec.Expectations.Expectation>_R
                     ->_R <Test.Hspec.Core.Example.Params>_R
                     ->_R <(Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation
                            -> GHC.Types.IO ())
                           -> GHC.Types.IO ()>_R
                     ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Test.Hspec.Core.Example.Result>_R)) ; Sym (Test.Hspec.Core.Example.N:Example[0]
                                                                                   <Test.Hspec.Expectations.Expectation>_N))
                   Main.main168 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
386cb96fd168c7794b8438d8941c6d17
  main168 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Classes.$fEq[]_$s$c== Main.main_w6 Main.main171 of wild {
                   GHC.Types.False
                   -> case GHC.Show.$wshowSignedInt
                             0#
                             2#
                             Main.main170 of ww2 { (#,#) ww3 ww4 ->
                      let {
                        expectedMsg :: [GHC.Types.Char]
                        = GHC.Types.: @ GHC.Types.Char ww3 ww4
                      } in
                      let {
                        expectedMsg1 :: GHC.Base.String
                        = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__3 expectedMsg
                      } in
                      case Test.HUnit.Lang.assertEqual_go expectedMsg1 of wild2 { () ->
                      case Main.main_w6 of wild1 {
                        []
                        -> case Test.HUnit.Lang.assertEqual_go
                                  Main.main_expectedMsg of wild3 { () ->
                           Main.main169 eta2 expectedMsg1 Main.main_expectedMsg }
                        : x xs
                        -> let {
                             actualMsg :: [GHC.Types.Char]
                             = case x of ww { GHC.Types.I# ww1 ->
                               case GHC.Show.$wshowSignedInt
                                      0#
                                      ww1
                                      (Main.main_showl1 xs) of ww7 { (#,#) ww8 ww9 ->
                               GHC.Types.: @ GHC.Types.Char ww8 ww9 } }
                           } in
                           let {
                             actualMsg1 :: GHC.Base.String
                             = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__3 actualMsg
                           } in
                           case Test.HUnit.Lang.assertEqual_go actualMsg1 of wild3 { () ->
                           Main.main169 eta2 expectedMsg1 actualMsg1 } } } }
                   GHC.Types.True -> (# eta2, GHC.Tuple.() #) }) -}
50824fb23aa47a966703d32787e33f66
  main169 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> GHC.Base.String
    -> GHC.Base.String
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <B,U><B,U><B,U>x -}
53b8f6488318fad8db7ed68ef6cd124b
  main17 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main18
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
2b4adf292942ca2d08cc09e318543198
  main170 :: GHC.Base.String
  {- Unfolding: (Main.main_showl1 (GHC.Types.[] @ GHC.Types.Int)) -}
0fb348a7972c710e9f83fb4593330019
  main171 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main129
                   (GHC.Types.[] @ GHC.Types.Int)) -}
0d09063fc8f6e40686285c42e0b50cf5
  main172 ::
    GHC.Maybe.Maybe Test.Hspec.Core.Example.Location.Location
  {- Unfolding: (Test.Hspec.Core.Tree.location11 Main.main173) -}
649a20778929e4628827a33c19565cc3
  main173 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.location1
                   Main.main174) -}
e358f72f7b168fbc593d51d2ee8997b7
  main174 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem14
                   Test.Hspec.Core.Tree.specItem11
                   Main.main175) -}
8d93319ed543ee4c470ada048f567cfd
  main175 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.fit12
                   Test.Hspec.Core.Spec.fit8
                   Main.main176) -}
35c85c60119131e64ecf3b558ad876e6
  main176 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main177
                   GHC.Stack.Types.EmptyCallStack) -}
4b12e0320d71e9f86d728b6d6cdc6cce
  main177 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main42
                   Main.main179
                   Main.main40
                   Main.main179
                   Main.main178) -}
061c5ac9047822d945fbf8f041d29365
  main178 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 32#) -}
7db58ead9200ea3bef96191ff299f8ee
  main179 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 41#) -}
c445fe6a8dde6d08205e027596b2fb46
  main18 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main19) -}
4e28cf9abcc9d607db3f73a653e11e9b
  main180 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main51
                   Main.main181) -}
1d05596dbbedd02aa26850a6dc13f61e
  main181 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main182) -}
c4378c1d38cab999f2b7b996afcaebd7
  main182 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("iscard first and last"#) -}
75c798d1732608b58878bad27469a37d
  main183 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main184
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
79bdef9e3912ffc07126237c2f8deec7
  main184 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main185) -}
28b817157bd5f21e43cc0b2a70df12a2
  main185 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main197
                   Main.main190
                   (GHC.Maybe.Nothing @ GHC.Types.Bool)
                   GHC.Types.False
                   Main.main186
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Test.Hspec.Core.Example.Result>_R))) -}
f5e7556f34d91328928d7f538a5a1ee6
  main186 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   ((<Test.Hspec.Expectations.Expectation>_R
                     ->_R <Test.Hspec.Core.Example.Params>_R
                     ->_R <(Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation
                            -> GHC.Types.IO ())
                           -> GHC.Types.IO ()>_R
                     ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Test.Hspec.Core.Example.Result>_R)) ; Sym (Test.Hspec.Core.Example.N:Example[0]
                                                                                   <Test.Hspec.Expectations.Expectation>_N))
                   Main.main187 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
1b8a1977eb76e348a1f7af9d32dc44f8
  main187 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Classes.$fEq[]_$s$c==
                        Main.main_w7
                        (GHC.Types.[] @ GHC.Types.Int) of wild {
                   GHC.Types.False
                   -> case Test.HUnit.Lang.assertEqual_go
                             Main.main_expectedMsg of wild2 { () ->
                      case Main.main_w7 of wild1 {
                        []
                        -> case Test.HUnit.Lang.assertEqual_go
                                  Main.main_expectedMsg of wild3 { () ->
                           Main.main188 eta2 Main.main_expectedMsg }
                        : x xs
                        -> let {
                             actualMsg :: [GHC.Types.Char]
                             = case x of ww { GHC.Types.I# ww1 ->
                               case GHC.Show.$wshowSignedInt
                                      0#
                                      ww1
                                      (Main.main_showl1 xs) of ww2 { (#,#) ww3 ww4 ->
                               GHC.Types.: @ GHC.Types.Char ww3 ww4 } }
                           } in
                           let {
                             actualMsg1 :: GHC.Base.String
                             = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__3 actualMsg
                           } in
                           case Test.HUnit.Lang.assertEqual_go actualMsg1 of wild3 { () ->
                           Main.main188 eta2 actualMsg1 } } }
                   GHC.Types.True -> (# eta2, GHC.Tuple.() #) }) -}
51de9912a03084f4b25705d0b29a7854
  main188 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> GHC.Base.String -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <B,U><B,U>x -}
39bd7c2b0e6f38978531e4e6ace23f1b
  main189 :: GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>,
     Unfolding: (\ (x :: GHC.Types.Int) ->
                 case x of wild { GHC.Types.I# x1 ->
                 case GHC.Prim.<# x1 10# of lwild {
                   DEFAULT -> GHC.Types.True 1# -> GHC.Types.False } }) -}
5d2c3f0f746820c8bf409cb2ab390edf
  main19 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main48
                   Main.main33
                   (GHC.Maybe.Nothing @ GHC.Types.Bool)
                   GHC.Types.False
                   Main.main20
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Test.Hspec.Core.Example.Result>_R))) -}
16d8a20c2ebdc13a9faaca26d47138c7
  main190 ::
    GHC.Maybe.Maybe Test.Hspec.Core.Example.Location.Location
  {- Unfolding: (Test.Hspec.Core.Tree.location11 Main.main191) -}
a7337ba7804bbeba513dc9744bb35d0d
  main191 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.location1
                   Main.main192) -}
d9580cbed0044a40e1e9160bb6662b58
  main192 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem14
                   Test.Hspec.Core.Tree.specItem11
                   Main.main193) -}
354e451b422d057223aa4f1348023a88
  main193 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.fit12
                   Test.Hspec.Core.Spec.fit8
                   Main.main194) -}
86b89fec99296930fbebc064cf362dea
  main194 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main195
                   GHC.Stack.Types.EmptyCallStack) -}
c29b29a995c83129930b164df1d371ce
  main195 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main42
                   Main.main196
                   Main.main40
                   Main.main196
                   Main.main39) -}
54ca6dfdb291f9b635ece69625d6a508
  main196 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 38#) -}
baec9c1d8e876460e0bbb549aad0079f
  main197 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main51
                   Main.main198) -}
3e421e1cd7f6caff6ef0c695f768795b
  main198 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main199) -}
15b4a5975c8b8a3f4419f014b8482107
  main199 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("iscard everything"#) -}
3ef1db1c7ce671b647cd61dfef335c42
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# s, Main.main3 #)) -}
af6faccf7d349cf43695abd2243082a4
  main20 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   ((<Test.Hspec.Expectations.Expectation>_R
                     ->_R <Test.Hspec.Core.Example.Params>_R
                     ->_R <(Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation
                            -> GHC.Types.IO ())
                           -> GHC.Types.IO ()>_R
                     ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Test.Hspec.Core.Example.Result>_R)) ; Sym (Test.Hspec.Core.Example.N:Example[0]
                                                                                   <Test.Hspec.Expectations.Expectation>_N))
                   Main.main21 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
040609a4a484c706141c965d0d53be61
  main200 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main201
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
06e935cd3171d2649e0666de25caf313
  main201 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main202) -}
f5e1cd8e647f0d3e571bcf89919c2e6f
  main202 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main214
                   Main.main206
                   (GHC.Maybe.Nothing @ GHC.Types.Bool)
                   GHC.Types.False
                   Main.main203
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Test.Hspec.Core.Example.Result>_R))) -}
2ae742fb51d59a81ca93a68dcce903f2
  main203 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   ((<Test.Hspec.Expectations.Expectation>_R
                     ->_R <Test.Hspec.Core.Example.Params>_R
                     ->_R <(Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation
                            -> GHC.Types.IO ())
                           -> GHC.Types.IO ()>_R
                     ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Test.Hspec.Core.Example.Result>_R)) ; Sym (Test.Hspec.Core.Example.N:Example[0]
                                                                                   <Test.Hspec.Expectations.Expectation>_N))
                   Main.main204 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
6924918ba5c2803d1503e20b936c6955
  main204 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Classes.$fEq[]_$s$c==
                        Main.main_w8
                        (GHC.Types.[] @ GHC.Types.Int) of wild {
                   GHC.Types.False
                   -> case Test.HUnit.Lang.assertEqual_go
                             Main.main_expectedMsg of wild2 { () ->
                      case Main.main_w8 of wild1 {
                        []
                        -> case Test.HUnit.Lang.assertEqual_go
                                  Main.main_expectedMsg of wild3 { () ->
                           Main.main205 eta2 Main.main_expectedMsg }
                        : x xs
                        -> let {
                             actualMsg :: [GHC.Types.Char]
                             = case x of ww { GHC.Types.I# ww1 ->
                               case GHC.Show.$wshowSignedInt
                                      0#
                                      ww1
                                      (Main.main_showl1 xs) of ww2 { (#,#) ww3 ww4 ->
                               GHC.Types.: @ GHC.Types.Char ww3 ww4 } }
                           } in
                           let {
                             actualMsg1 :: GHC.Base.String
                             = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__3 actualMsg
                           } in
                           case Test.HUnit.Lang.assertEqual_go actualMsg1 of wild3 { () ->
                           Main.main205 eta2 actualMsg1 } } }
                   GHC.Types.True -> (# eta2, GHC.Tuple.() #) }) -}
3f870be1f8959030297eefb0cda067c1
  main205 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> GHC.Base.String -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <B,U><B,U>x -}
b31cd8523f5fe61d547cfaf77b0df220
  main206 ::
    GHC.Maybe.Maybe Test.Hspec.Core.Example.Location.Location
  {- Unfolding: (Test.Hspec.Core.Tree.location11 Main.main207) -}
37696bb62df8dff2d1482a29e8c33313
  main207 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.location1
                   Main.main208) -}
c756bee08ab9cddd2f549b810a133814
  main208 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem14
                   Test.Hspec.Core.Tree.specItem11
                   Main.main209) -}
06e41251dda7c40f9fc427c772506405
  main209 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.fit12
                   Test.Hspec.Core.Spec.fit8
                   Main.main210) -}
6262a39ff1902728a1c01e7a1a38f032
  main21 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Classes.$fEq[]_$s$c==1 Main.main_w4 Main.main29 of wild {
                   GHC.Types.False
                   -> case Test.HUnit.Lang.assertEqual_go
                             Main.main_expectedMsg1 of wild2 { () ->
                      case Main.main_w4 of wild1 {
                        []
                        -> case Test.HUnit.Lang.assertEqual_go
                                  Main.main_expectedMsg of wild3 { () ->
                           Main.main22 eta2 Main.main_expectedMsg }
                        : x xs
                        -> let {
                             actualMsg :: GHC.Base.String
                             = GHC.Show.showLitString
                                 x
                                 (GHC.Types.:
                                    @ GHC.Types.Char
                                    GHC.Show.$fShow(,)3
                                    (Main.main_showl xs))
                           } in
                           let {
                             actualMsg1 :: [GHC.Types.Char]
                             = GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)3 actualMsg
                           } in
                           let {
                             actualMsg2 :: GHC.Base.String
                             = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__3 actualMsg1
                           } in
                           case Test.HUnit.Lang.assertEqual_go actualMsg2 of wild3 { () ->
                           Main.main22 eta2 actualMsg2 } } }
                   GHC.Types.True -> (# eta2, GHC.Tuple.() #) }) -}
d50f3b6ae38735b2128f11d5e85c32a7
  main210 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main211
                   GHC.Stack.Types.EmptyCallStack) -}
4d01a2a8c2af9d9eda0a01f2c7d12d4f
  main211 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main42
                   Main.main213
                   Main.main40
                   Main.main213
                   Main.main212) -}
1446ff90767b298d32b29e3beed9d43b
  main212 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 23#) -}
53671a52e630f43c2f9b2a6100dd9639
  main213 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 35#) -}
d04656a5322bbd04c3791dd2f45b12c3
  main214 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main217
                   Main.main215) -}
6bcf1bbc6089a2eda3de14e8142d058b
  main215 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main216) -}
1e29323d7833086b102b43543c8a4cbf
  main216 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("mpty discard"#) -}
dff9e3276e02b5819ebf74c96ee496c2
  main217 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'e'#) -}
9603a4172e4390719d60a11ba0b7324d
  main218 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main219
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
32dbe19f5b7c523b13949dd6074d89f8
  main219 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main220) -}
3fede88d07f9e1d5ff3ebc8a88c47a45
  main22 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> GHC.Base.String -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <B,U><B,U>x -}
fd6875e1f6fda1b29b67f5917572f990
  main220 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main239
                   Main.main231
                   (GHC.Maybe.Nothing @ GHC.Types.Bool)
                   GHC.Types.False
                   Main.main221
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Test.Hspec.Core.Example.Result>_R))) -}
42a79f4fcd3e7f993b82af3084048177
  main221 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   ((<Test.Hspec.Expectations.Expectation>_R
                     ->_R <Test.Hspec.Core.Example.Params>_R
                     ->_R <(Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation
                            -> GHC.Types.IO ())
                           -> GHC.Types.IO ()>_R
                     ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Test.Hspec.Core.Example.Result>_R)) ; Sym (Test.Hspec.Core.Example.N:Example[0]
                                                                                   <Test.Hspec.Expectations.Expectation>_N))
                   Main.main222 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
2bd7761dece3a000ae70cbe6800fe2d2
  main222 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Classes.$fEq[]_$s$c==1 Main.main_w9 Main.main229 of wild {
                   GHC.Types.False
                   -> case Test.HUnit.Lang.assertEqual_go
                             Main.main_expectedMsg3 of wild2 { () ->
                      case Main.main_w9 of wild1 {
                        []
                        -> case Test.HUnit.Lang.assertEqual_go
                                  Main.main_expectedMsg of wild3 { () ->
                           Main.main223 eta2 Main.main_expectedMsg }
                        : x xs
                        -> let {
                             actualMsg :: GHC.Base.String
                             = GHC.Show.showLitString
                                 x
                                 (GHC.Types.:
                                    @ GHC.Types.Char
                                    GHC.Show.$fShow(,)3
                                    (Main.main_showl xs))
                           } in
                           let {
                             actualMsg1 :: [GHC.Types.Char]
                             = GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)3 actualMsg
                           } in
                           let {
                             actualMsg2 :: GHC.Base.String
                             = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__3 actualMsg1
                           } in
                           case Test.HUnit.Lang.assertEqual_go actualMsg2 of wild3 { () ->
                           Main.main223 eta2 actualMsg2 } } }
                   GHC.Types.True -> (# eta2, GHC.Tuple.() #) }) -}
b04560a6b541d4c4b69cafdc2e22d0ee
  main223 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> GHC.Base.String -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <B,U><B,U>x -}
4f2601e303005ebc97495f3774dc7e43
  main224 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.$fShow(,)3
                   Main.main225) -}
61c6a201bde7e24bc637784d20b8f7b6
  main225 :: GHC.Base.String
  {- Unfolding: (GHC.Show.showLitString Main.main101 Main.main226) -}
990b31675a2137e513b646470450a664
  main226 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.$fShow(,)3
                   Main.main227) -}
99f43f9c65a76d69bcf54572d9acab78
  main227 :: GHC.Base.String
  {- Unfolding: (Main.main_showl Main.main228) -}
13254c97c74810e56d9a65cdad6d24dc
  main228 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.main99
                   Main.main96) -}
244f6925ec01073689257bde6670dbd5
  main229 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.main101
                   Main.main228) -}
4313af9d1fb0677e9fd540d980580408
  main23 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.$fShow(,)3
                   Main.main24) -}
a430f1e037be49ffc72093ff2183fc9a
  main230 :: [GHC.Types.Char] -> GHC.Types.Bool
  {- Arity: 1,
     Unfolding: (Data.OldList.isPrefixOf
                   @ GHC.Types.Char
                   GHC.Classes.$fEqChar
                   Main.main104) -}
94981b18f25cba8b3e31a04ef1625c9f
  main231 ::
    GHC.Maybe.Maybe Test.Hspec.Core.Example.Location.Location
  {- Unfolding: (Test.Hspec.Core.Tree.location11 Main.main232) -}
83e0baa9fa85f137da141b8c9f8ac651
  main232 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.location1
                   Main.main233) -}
3df861dd6da6076558b3ab7cff017792
  main233 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem14
                   Test.Hspec.Core.Tree.specItem11
                   Main.main234) -}
0148f7281757c5c9f084a5e288c1e84f
  main234 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.fit12
                   Test.Hspec.Core.Spec.fit8
                   Main.main235) -}
9cf2fea31fcfb0a700c59c40dd64ffa4
  main235 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main236
                   GHC.Stack.Types.EmptyCallStack) -}
dec093ceda0991eca4c89f777aa129dc
  main236 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main42
                   Main.main238
                   Main.main40
                   Main.main238
                   Main.main237) -}
9287e1adb7f3aeaa9d31a84ee48cad34
  main237 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 22#) -}
0edce10d1b9a1de0f28e9d10a354c1d3
  main238 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 29#) -}
f3c2e267eb2cf14082627eb937e5048b
  main239 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main71
                   Main.main240) -}
eae6375f2616b723454a7849aa817522
  main24 :: GHC.Base.String
  {- Unfolding: (GHC.Show.showLitString Main.main27 Main.main25) -}
5b7a9342c9ecd8c4f00cc31a1518db4e
  main240 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main241) -}
c6a9b8a8047f73125f779f5a245c7e0c
  main241 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("eep strings"#) -}
ffc4d937c0eb108011b476334c402e83
  main242 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main243
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
a043c358a45a2b923250682fc6025665
  main243 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main244) -}
9ea44efb1f366204bcec82df186e0119
  main244 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main256
                   Main.main248
                   (GHC.Maybe.Nothing @ GHC.Types.Bool)
                   GHC.Types.False
                   Main.main245
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Test.Hspec.Core.Example.Result>_R))) -}
39f53843986692db29d2db0918f0d824
  main245 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   ((<Test.Hspec.Expectations.Expectation>_R
                     ->_R <Test.Hspec.Core.Example.Params>_R
                     ->_R <(Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation
                            -> GHC.Types.IO ())
                           -> GHC.Types.IO ()>_R
                     ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Test.Hspec.Core.Example.Result>_R)) ; Sym (Test.Hspec.Core.Example.N:Example[0]
                                                                                   <Test.Hspec.Expectations.Expectation>_N))
                   Main.main246 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
dcbb87e947bb230e5b5f15249fd86f17
  main246 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Classes.$fEq[]_$s$c== Main.main_w6 Main.main171 of wild {
                   GHC.Types.False
                   -> case GHC.Show.$wshowSignedInt
                             0#
                             2#
                             Main.main170 of ww2 { (#,#) ww3 ww4 ->
                      let {
                        expectedMsg :: [GHC.Types.Char]
                        = GHC.Types.: @ GHC.Types.Char ww3 ww4
                      } in
                      let {
                        expectedMsg1 :: GHC.Base.String
                        = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__3 expectedMsg
                      } in
                      case Test.HUnit.Lang.assertEqual_go expectedMsg1 of wild2 { () ->
                      case Main.main_w6 of wild1 {
                        []
                        -> case Test.HUnit.Lang.assertEqual_go
                                  Main.main_expectedMsg of wild3 { () ->
                           Main.main247 eta2 expectedMsg1 Main.main_expectedMsg }
                        : x xs
                        -> let {
                             actualMsg :: [GHC.Types.Char]
                             = case x of ww { GHC.Types.I# ww1 ->
                               case GHC.Show.$wshowSignedInt
                                      0#
                                      ww1
                                      (Main.main_showl1 xs) of ww7 { (#,#) ww8 ww9 ->
                               GHC.Types.: @ GHC.Types.Char ww8 ww9 } }
                           } in
                           let {
                             actualMsg1 :: GHC.Base.String
                             = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__3 actualMsg
                           } in
                           case Test.HUnit.Lang.assertEqual_go actualMsg1 of wild3 { () ->
                           Main.main247 eta2 expectedMsg1 actualMsg1 } } } }
                   GHC.Types.True -> (# eta2, GHC.Tuple.() #) }) -}
ec4d7ee9af4ef31ca566d6ed77d356e2
  main247 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> GHC.Base.String
    -> GHC.Base.String
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <B,U><B,U><B,U>x -}
59838c6846ae4309aa08e46b1b9457af
  main248 ::
    GHC.Maybe.Maybe Test.Hspec.Core.Example.Location.Location
  {- Unfolding: (Test.Hspec.Core.Tree.location11 Main.main249) -}
ff1d10b00f08e99f870ed6aa7f895fe9
  main249 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.location1
                   Main.main250) -}
7700f39e9e6bdf53ea74089eea0bf0a3
  main25 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.$fShow(,)3
                   Main.main26) -}
3640fe1323ad20862c6771f28b10f680
  main250 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem14
                   Test.Hspec.Core.Tree.specItem11
                   Main.main251) -}
3911576c8f7f5170a0ab4a0a696a8398
  main251 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.fit12
                   Test.Hspec.Core.Spec.fit8
                   Main.main252) -}
72962512be0d930b0accc42a9131d3c5
  main252 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main253
                   GHC.Stack.Types.EmptyCallStack) -}
6316fba2cd61e6071de0616833846486
  main253 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main42
                   Main.main255
                   Main.main40
                   Main.main255
                   Main.main254) -}
5119ba694489e50f0597aa11d6258532
  main254 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 37#) -}
9198440b202b2907f68a2eeb8691009c
  main255 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 26#) -}
59d4b938f5046a8e211236f0d09f02ae
  main256 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main71
                   Main.main257) -}
8eb6f39bf5d2080c9522a5320e9785ec
  main257 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main258) -}
969707755cd15d55ac2bdae2c324c107
  main258 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("eep neither first nor last"#) -}
a7e5a162bc38ab3b2b9b22f9a0a48024
  main259 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main260
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
c70b922a1b5aa39442207ed11cc291eb
  main26 :: GHC.Base.String
  {- Unfolding: (Main.main_showl
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
fdf46d8deb5a53c75bf2f8e734beb558
  main260 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main261) -}
ed8c5db704b9fe1278c589af2fe8f51d
  main261 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main271
                   Main.main265
                   (GHC.Maybe.Nothing @ GHC.Types.Bool)
                   GHC.Types.False
                   Main.main262
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Test.Hspec.Core.Example.Result>_R))) -}
23ad0d73bb3382ce26ba9ecd60e0b72a
  main262 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   ((<Test.Hspec.Expectations.Expectation>_R
                     ->_R <Test.Hspec.Core.Example.Params>_R
                     ->_R <(Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation
                            -> GHC.Types.IO ())
                           -> GHC.Types.IO ()>_R
                     ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Test.Hspec.Core.Example.Result>_R)) ; Sym (Test.Hspec.Core.Example.N:Example[0]
                                                                                   <Test.Hspec.Expectations.Expectation>_N))
                   Main.main263 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
7d483c2e1f557b1b31d78455b0a89580
  main263 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Classes.$fEq[]_$s$c==
                        Main.main_w10
                        (GHC.Types.[] @ GHC.Types.Int) of wild {
                   GHC.Types.False
                   -> case Test.HUnit.Lang.assertEqual_go
                             Main.main_expectedMsg of wild2 { () ->
                      case Main.main_w10 of wild1 {
                        []
                        -> case Test.HUnit.Lang.assertEqual_go
                                  Main.main_expectedMsg of wild3 { () ->
                           Main.main264 eta2 Main.main_expectedMsg }
                        : x xs
                        -> let {
                             actualMsg :: [GHC.Types.Char]
                             = case x of ww { GHC.Types.I# ww1 ->
                               case GHC.Show.$wshowSignedInt
                                      0#
                                      ww1
                                      (Main.main_showl1 xs) of ww2 { (#,#) ww3 ww4 ->
                               GHC.Types.: @ GHC.Types.Char ww3 ww4 } }
                           } in
                           let {
                             actualMsg1 :: GHC.Base.String
                             = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__3 actualMsg
                           } in
                           case Test.HUnit.Lang.assertEqual_go actualMsg1 of wild3 { () ->
                           Main.main264 eta2 actualMsg1 } } }
                   GHC.Types.True -> (# eta2, GHC.Tuple.() #) }) -}
930ea5af4c00d3811956be82181c24a9
  main264 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> GHC.Base.String -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <B,U><B,U>x -}
dddad3c91b16cf86caa77071b36a9b50
  main265 ::
    GHC.Maybe.Maybe Test.Hspec.Core.Example.Location.Location
  {- Unfolding: (Test.Hspec.Core.Tree.location11 Main.main266) -}
5ab52c86d9f8d00666bece51c3e9f6cc
  main266 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.location1
                   Main.main267) -}
1dae791fb4232f1244c25edf96e9f047
  main267 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem14
                   Test.Hspec.Core.Tree.specItem11
                   Main.main268) -}
02c6823ce6cce797f35c038e1966cb33
  main268 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.fit12
                   Test.Hspec.Core.Spec.fit8
                   Main.main269) -}
fe586c590fab6529098c8ae36e8895f4
  main269 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main270
                   GHC.Stack.Types.EmptyCallStack) -}
fae28404c33ab0cef00165a1fe4eb9e7
  main27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main28) -}
c725fbcef1e52d5237a60fb402d7b503
  main270 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main42
                   Main.main212
                   Main.main40
                   Main.main212
                   Main.main237) -}
ff50204d5d67f32dde5063f08e8d7bd9
  main271 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main71
                   Main.main272) -}
403556abfeddffec848d313a0c865d6a
  main272 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main273) -}
42e1f86c3657038a8de0b43dbc84a6f0
  main273 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("eep nothing"#) -}
8e912c10bb9fab566c9fdf0504108cc6
  main274 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main275
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
d7578704dd014efae8ff880d8377de3a
  main275 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main276) -}
cc33b47d549e60fb2416998fc9aaf9ff
  main276 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main287
                   Main.main280
                   (GHC.Maybe.Nothing @ GHC.Types.Bool)
                   GHC.Types.False
                   Main.main277
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Test.Hspec.Core.Example.Result>_R))) -}
d14008e8df6a0af9c8e5c6fc52bce866
  main277 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   ((<Test.Hspec.Expectations.Expectation>_R
                     ->_R <Test.Hspec.Core.Example.Params>_R
                     ->_R <(Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation
                            -> GHC.Types.IO ())
                           -> GHC.Types.IO ()>_R
                     ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Test.Hspec.Core.Example.Result>_R)) ; Sym (Test.Hspec.Core.Example.N:Example[0]
                                                                                   <Test.Hspec.Expectations.Expectation>_N))
                   Main.main278 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
a24cb06915ef60701112fcf1cb2c798f
  main278 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Classes.$fEq[]_$s$c== Main.main_w3 Main.main125 of wild {
                   GHC.Types.False
                   -> case GHC.Show.$wshowSignedInt
                             0#
                             1#
                             Main.main122 of ww2 { (#,#) ww3 ww4 ->
                      let {
                        expectedMsg :: [GHC.Types.Char]
                        = GHC.Types.: @ GHC.Types.Char ww3 ww4
                      } in
                      let {
                        expectedMsg1 :: GHC.Base.String
                        = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__3 expectedMsg
                      } in
                      case Test.HUnit.Lang.assertEqual_go expectedMsg1 of wild2 { () ->
                      case Main.main_w3 of wild1 {
                        []
                        -> case Test.HUnit.Lang.assertEqual_go
                                  Main.main_expectedMsg of wild3 { () ->
                           Main.main279 eta2 expectedMsg1 Main.main_expectedMsg }
                        : x xs
                        -> let {
                             actualMsg :: [GHC.Types.Char]
                             = case x of ww { GHC.Types.I# ww1 ->
                               case GHC.Show.$wshowSignedInt
                                      0#
                                      ww1
                                      (Main.main_showl1 xs) of ww7 { (#,#) ww8 ww9 ->
                               GHC.Types.: @ GHC.Types.Char ww8 ww9 } }
                           } in
                           let {
                             actualMsg1 :: GHC.Base.String
                             = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__3 actualMsg
                           } in
                           case Test.HUnit.Lang.assertEqual_go actualMsg1 of wild3 { () ->
                           Main.main279 eta2 expectedMsg1 actualMsg1 } } } }
                   GHC.Types.True -> (# eta2, GHC.Tuple.() #) }) -}
e0ada5563af0f100659b810236bca404
  main279 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> GHC.Base.String
    -> GHC.Base.String
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <B,U><B,U><B,U>x -}
a343d786062c831c9658522b540726aa
  main28 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("yes"#) -}
2ff0338e71efea776b6f494dede3c134
  main280 ::
    GHC.Maybe.Maybe Test.Hspec.Core.Example.Location.Location
  {- Unfolding: (Test.Hspec.Core.Tree.location11 Main.main281) -}
1a3b44a71ad48291811f8b089b33d9b7
  main281 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.location1
                   Main.main282) -}
5ddebf1b4dd64ce93dedec5dcd37d8a9
  main282 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem14
                   Test.Hspec.Core.Tree.specItem11
                   Main.main283) -}
53394ed854f6daf080a36ad45424b24e
  main283 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.fit12
                   Test.Hspec.Core.Spec.fit8
                   Main.main284) -}
4ef5528ce50cc8c5eb036805c326c063
  main284 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main285
                   GHC.Stack.Types.EmptyCallStack) -}
47adc013be9863a09cbafaf9b88e144a
  main285 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main42
                   Main.main286
                   Main.main40
                   Main.main286
                   Main.main238) -}
0b693f2cad13e6135162c63c1fd88397
  main286 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 20#) -}
f53f79052602cc754d3d18ffb8bab3c9
  main287 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main71
                   Main.main288) -}
1060c7ddeea2983ffbb8879637a6308f
  main288 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main289) -}
98c8f1ba5a0ee9a6417c82cc402592d4
  main289 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("eep first and last"#) -}
c76b66499373b593bd3279b6e684c781
  main29 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.main27
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
95deacdaac985d70a49bf2f6e9aade7a
  main290 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main291
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
383c95d07335678a7ca3632247bde741
  main291 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main292) -}
2b99d4893fa28fe33ea935b73ae159bf
  main292 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main305
                   Main.main298
                   (GHC.Maybe.Nothing @ GHC.Types.Bool)
                   GHC.Types.False
                   Main.main293
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Test.Hspec.Core.Example.Result>_R))) -}
a3e9fa828b3c060c8ceebdec27172dd5
  main293 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   ((<Test.Hspec.Expectations.Expectation>_R
                     ->_R <Test.Hspec.Core.Example.Params>_R
                     ->_R <(Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation
                            -> GHC.Types.IO ())
                           -> GHC.Types.IO ()>_R
                     ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Test.Hspec.Core.Example.Result>_R)) ; Sym (Test.Hspec.Core.Example.N:Example[0]
                                                                                   <Test.Hspec.Expectations.Expectation>_N))
                   Main.main294 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
764420bc414883c74ec9eafdf5588ffe
  main294 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Classes.$fEq[]_$s$c== Main.main_w11 Main.main127 of wild {
                   GHC.Types.False
                   -> case GHC.Show.$wshowSignedInt
                             0#
                             1#
                             Main.main296 of ww2 { (#,#) ww3 ww4 ->
                      let {
                        expectedMsg :: [GHC.Types.Char]
                        = GHC.Types.: @ GHC.Types.Char ww3 ww4
                      } in
                      let {
                        expectedMsg1 :: GHC.Base.String
                        = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__3 expectedMsg
                      } in
                      case Test.HUnit.Lang.assertEqual_go expectedMsg1 of wild2 { () ->
                      case Main.main_w11 of wild1 {
                        []
                        -> case Test.HUnit.Lang.assertEqual_go
                                  Main.main_expectedMsg of wild3 { () ->
                           Main.main295 eta2 expectedMsg1 Main.main_expectedMsg }
                        : x xs
                        -> let {
                             actualMsg :: [GHC.Types.Char]
                             = case x of ww { GHC.Types.I# ww1 ->
                               case GHC.Show.$wshowSignedInt
                                      0#
                                      ww1
                                      (Main.main_showl1 xs) of ww7 { (#,#) ww8 ww9 ->
                               GHC.Types.: @ GHC.Types.Char ww8 ww9 } }
                           } in
                           let {
                             actualMsg1 :: GHC.Base.String
                             = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__3 actualMsg
                           } in
                           case Test.HUnit.Lang.assertEqual_go actualMsg1 of wild3 { () ->
                           Main.main295 eta2 expectedMsg1 actualMsg1 } } } }
                   GHC.Types.True -> (# eta2, GHC.Tuple.() #) }) -}
57272b89c96a86c23a800bf5f3a18a81
  main295 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> GHC.Base.String
    -> GHC.Base.String
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <B,U><B,U><B,U>x -}
da3069e829eec26da35ea5377b264d4c
  main296 :: GHC.Base.String
  {- Unfolding: (Main.main_showl1 Main.main128) -}
8971c30c75e59678d9e06737d6ba7328
  main297 :: GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>,
     Unfolding: (\ (ds :: GHC.Types.Int) ->
                 case ds of wild { GHC.Types.I# x ->
                 GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.<# x 10#) }) -}
530f986be03758612cbd648405eacbf0
  main298 ::
    GHC.Maybe.Maybe Test.Hspec.Core.Example.Location.Location
  {- Unfolding: (Test.Hspec.Core.Tree.location11 Main.main299) -}
9420734763554f0409bd8ffbf62284d3
  main299 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.location1
                   Main.main300) -}
ec90e5760e29e678491754636813d150
  main3 :: ((), [Test.Hspec.Core.Tree.SpecTree ()])
  {- Strictness: m, Unfolding: ((GHC.Tuple.(), Main.main4)) -}
40ea56e6cd138fc809ba9948abb133da
  main30 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.main27
                   Main.main31) -}
f8ca2ab8b0770fb3dc3737bb0ba840a4
  main300 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem14
                   Test.Hspec.Core.Tree.specItem11
                   Main.main301) -}
f97f8527f314248a0a075125e6012379
  main301 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.fit12
                   Test.Hspec.Core.Spec.fit8
                   Main.main302) -}
152cff1470cfac0ac8d2916e9b384df5
  main302 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main303
                   GHC.Stack.Types.EmptyCallStack) -}
a4d60c28e910659a4e0fe6f6b1310029
  main303 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main42
                   Main.main304
                   Main.main40
                   Main.main304
                   Main.main66) -}
99f072b5f54e644c5909dd3eba89106a
  main304 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 17#) -}
7b116b2a01fe7a3fc2435af80b197cc1
  main305 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main71
                   Main.main306) -}
c318d25feae45054c83dbd6fcd0cac89
  main306 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main307) -}
c6b684d32d09a1162aa1b9e6df9ab888
  main307 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("eep everything"#) -}
93a0da97ca0c32cb90b564dd4c56120b
  main308 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main309
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
d477060d8184d86afba0c16c28008af5
  main309 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main310) -}
dcd645e975f700d3f49b1145670bf973
  main31 :: [[GHC.Types.Char]]
  {- Strictness: x -}
3c9158068d88715eb8e34c54740e34bd
  main310 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main321
                   Main.main314
                   (GHC.Maybe.Nothing @ GHC.Types.Bool)
                   GHC.Types.False
                   Main.main311
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Test.Hspec.Core.Example.Result>_R))) -}
d695afd5ff9d17a19f052017f807e61f
  main311 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   ((<Test.Hspec.Expectations.Expectation>_R
                     ->_R <Test.Hspec.Core.Example.Params>_R
                     ->_R <(Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation
                            -> GHC.Types.IO ())
                           -> GHC.Types.IO ()>_R
                     ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Test.Hspec.Core.Example.Result>_R)) ; Sym (Test.Hspec.Core.Example.N:Example[0]
                                                                                   <Test.Hspec.Expectations.Expectation>_N))
                   Main.main312 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
560142c45e475aef6503a1e9c418d18d
  main312 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Classes.$fEq[]_$s$c==
                        Main.main_w12
                        (GHC.Types.[] @ GHC.Types.Int) of wild {
                   GHC.Types.False
                   -> case Test.HUnit.Lang.assertEqual_go
                             Main.main_expectedMsg of wild2 { () ->
                      case Main.main_w12 of wild1 {
                        []
                        -> case Test.HUnit.Lang.assertEqual_go
                                  Main.main_expectedMsg of wild3 { () ->
                           Main.main313 eta2 Main.main_expectedMsg }
                        : x xs
                        -> let {
                             actualMsg :: [GHC.Types.Char]
                             = case x of ww { GHC.Types.I# ww1 ->
                               case GHC.Show.$wshowSignedInt
                                      0#
                                      ww1
                                      (Main.main_showl1 xs) of ww2 { (#,#) ww3 ww4 ->
                               GHC.Types.: @ GHC.Types.Char ww3 ww4 } }
                           } in
                           let {
                             actualMsg1 :: GHC.Base.String
                             = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__3 actualMsg
                           } in
                           case Test.HUnit.Lang.assertEqual_go actualMsg1 of wild3 { () ->
                           Main.main313 eta2 actualMsg1 } } }
                   GHC.Types.True -> (# eta2, GHC.Tuple.() #) }) -}
9f9d4de1926580d7fae5d59d2334bcd8
  main313 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> GHC.Base.String -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <B,U><B,U>x -}
4db19712fed388624b0b099df2346ebf
  main314 ::
    GHC.Maybe.Maybe Test.Hspec.Core.Example.Location.Location
  {- Unfolding: (Test.Hspec.Core.Tree.location11 Main.main315) -}
628287d1ad62d988ffdd8bedb4a7593f
  main315 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.location1
                   Main.main316) -}
7c0b542ffebe0b5969680a09397753e1
  main316 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem14
                   Test.Hspec.Core.Tree.specItem11
                   Main.main317) -}
7105877a0a1eac41c76c922403b32e5a
  main317 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.fit12
                   Test.Hspec.Core.Spec.fit8
                   Main.main318) -}
61ec0ecd99667ea0a40fd893033f8cd2
  main318 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main319
                   GHC.Stack.Types.EmptyCallStack) -}
4e9282254a68a31af2d04a18ff72bf39
  main319 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main42
                   Main.main320
                   Main.main40
                   Main.main320
                   Main.main286) -}
756649e325c799019e043803f4d2b9be
  main32 :: [GHC.Types.Char] -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: (\ (ds :: [GHC.Types.Char]) -> GHC.Types.True) -}
e5c2952a5b9b55221e9012ffabad84af
  main320 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 14#) -}
2bcdbd0a48991668a71ea34b236bc25d
  main321 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main217
                   Main.main322) -}
2b6423142d060b71b876030bb78b7f2e
  main322 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main323) -}
f08692518e57d3efd101de504c4458cc
  main323 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("mpty keep"#) -}
7e6c0aa5172ae9e50fbeeaf9277643ed
  main324 :: Test.Hspec.Core.Config.Options.Config
  {- Unfolding: (Test.Hspec.Core.Config.Options.Config
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.True
                   (GHC.Maybe.Nothing @ GHC.IO.FilePath)
                   GHC.Types.False
                   GHC.Types.False
                   (GHC.Maybe.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Maybe.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Maybe.Nothing @ GHC.Integer.Type.Integer)
                   (GHC.Maybe.Nothing @ GHC.Types.Int)
                   (GHC.Maybe.Nothing @ GHC.Types.Int)
                   (GHC.Maybe.Nothing @ GHC.Types.Int)
                   Test.Hspec.Core.Example.defaultParams1
                   Test.Hspec.Core.Config.Options.ColorAuto
                   GHC.Types.True
                   (GHC.Maybe.Nothing @ Test.Hspec.Core.Formatters.Monad.Formatter)
                   GHC.Types.False
                   Test.Hspec.Core.Config.Options.defaultConfig1
                   (GHC.Maybe.Nothing @ GHC.Types.Int)) -}
c69fc8e76c28736480f743e936309b51
  main325 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
e3cae80110acc670e2e986c948ac81eb
  main33 :: GHC.Maybe.Maybe Test.Hspec.Core.Example.Location.Location
  {- Unfolding: (Test.Hspec.Core.Tree.location11 Main.main34) -}
7220c7fa80f53e3dae32b97b83196dcd
  main34 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.location1
                   Main.main35) -}
9fe69e2dc2374cb5b04ebc0ca7e57412
  main35 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem14
                   Test.Hspec.Core.Tree.specItem11
                   Main.main36) -}
541e336ef30bd2b87b4108b3034c7c2e
  main36 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.fit12
                   Test.Hspec.Core.Spec.fit8
                   Main.main37) -}
2bd3c853784b2b76eea39bee58d23621
  main37 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main38
                   GHC.Stack.Types.EmptyCallStack) -}
2bf8b5f9a4be099af77382a9200c06ad
  main38 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main42
                   Main.main41
                   Main.main40
                   Main.main41
                   Main.main39) -}
6d8f9086653552f662337c8fc9cbaff8
  main39 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 28#) -}
fe6cbaef9f6423f00fe965ab4a2d1d4d
  main4 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main308
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (<GHC.Prim.State# GHC.Prim.RealWorld>_R
                                   ->_R ((#,#)
                                           <'GHC.Types.TupleRep '[]>_R
                                           <'GHC.Types.LiftedRep>_R
                                           <GHC.Prim.State# GHC.Prim.RealWorld>_R
                                           ((,)
                                              <()>_R
                                              ([(Test.Hspec.Core.Tree.Tree
                                                   (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                                                    ->_R <GHC.Types.IO ()>_R)
                                                   (Test.Hspec.Core.Tree.Item
                                                      (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R)_R)_R))))
                   Main.main5) -}
0b98bc14a95cf888ecb6b13f7e0c518c
  main40 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 5#) -}
6be3fe6af997635086391d753497aed0
  main41 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 62#) -}
c9f6fe5eb0f2b1399e00b0a6ffe5926d
  main42 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main43) -}
5e9755e75c1b0534c29694679cd35696
  main43 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("test/Tests.hs"#) -}
9898a076aef3f0c4de7451c6c28575a9
  main44 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$trModule2) -}
44897bc29ca950e2b161aad695edf373
  main45 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$trModule4) -}
09b2557b0a48a777548a1944e86b52d4
  main46 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main47) -}
b0ffd8e3a5e3e3b549202ed7c502bcdb
  main47 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("it"#) -}
a15725768a25929bcca3e58f492608f5
  main48 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main51
                   Main.main49) -}
09d0a3d472ab43fae3c161d345bf3fa4
  main49 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main50) -}
c1f588a30d328a5a23bd80862671a71c
  main5 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main290
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (<GHC.Prim.State# GHC.Prim.RealWorld>_R
                                   ->_R ((#,#)
                                           <'GHC.Types.TupleRep '[]>_R
                                           <'GHC.Types.LiftedRep>_R
                                           <GHC.Prim.State# GHC.Prim.RealWorld>_R
                                           ((,)
                                              <()>_R
                                              ([(Test.Hspec.Core.Tree.Tree
                                                   (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                                                    ->_R <GHC.Types.IO ()>_R)
                                                   (Test.Hspec.Core.Tree.Item
                                                      (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R)_R)_R))))
                   Main.main6) -}
069fce879464360e29e28eff82341f3e
  main50 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("iscard non-strict"#) -}
5507ba21c9c3ff1ce79e88504cdb9c64
  main51 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'd'#) -}
540f9ab28fa94c73ac81177279020612
  main52 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main53
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
580f91207cb281e6b207892d7ed7f997
  main53 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main54) -}
137ad1d9dc9f0b08f0e1b4b34098418c
  main54 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main68
                   Main.main60
                   (GHC.Maybe.Nothing @ GHC.Types.Bool)
                   GHC.Types.False
                   Main.main55
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Test.Hspec.Core.Example.Result>_R))) -}
af32c9398d005247ce87147f282e56f0
  main55 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   ((<Test.Hspec.Expectations.Expectation>_R
                     ->_R <Test.Hspec.Core.Example.Params>_R
                     ->_R <(Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation
                            -> GHC.Types.IO ())
                           -> GHC.Types.IO ()>_R
                     ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Test.Hspec.Core.Example.Result>_R)) ; Sym (Test.Hspec.Core.Example.N:Example[0]
                                                                                   <Test.Hspec.Expectations.Expectation>_N))
                   Main.main56 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
f900fbdec81f70f146fbe1ee4cd37fb1
  main56 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Classes.$fEq[]_$s$c==1 Main.main_w1 Main.main29 of wild {
                   GHC.Types.False
                   -> case Test.HUnit.Lang.assertEqual_go
                             Main.main_expectedMsg1 of wild2 { () ->
                      case Main.main_w1 of wild1 {
                        []
                        -> case Test.HUnit.Lang.assertEqual_go
                                  Main.main_expectedMsg of wild3 { () ->
                           Main.main57 eta2 Main.main_expectedMsg }
                        : x xs
                        -> let {
                             actualMsg :: GHC.Base.String
                             = GHC.Show.showLitString
                                 x
                                 (GHC.Types.:
                                    @ GHC.Types.Char
                                    GHC.Show.$fShow(,)3
                                    (Main.main_showl xs))
                           } in
                           let {
                             actualMsg1 :: [GHC.Types.Char]
                             = GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)3 actualMsg
                           } in
                           let {
                             actualMsg2 :: GHC.Base.String
                             = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__3 actualMsg1
                           } in
                           case Test.HUnit.Lang.assertEqual_go actualMsg2 of wild3 { () ->
                           Main.main57 eta2 actualMsg2 } } }
                   GHC.Types.True -> (# eta2, GHC.Tuple.() #) }) -}
525f7f805fe4c96615bf1730ec20b7ab
  main57 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> GHC.Base.String -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <B,U><B,U>x -}
526b2939c0aa2eda7adbb5fd1a0d35b5
  main58 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.main27
                   Main.main59) -}
1af2114ce62abe2f6bad7dcf9c5caa3d
  main59 :: [[GHC.Types.Char]]
  {- Strictness: x -}
299d45c89eead395195159269a1156ab
  main6 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main274
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (<GHC.Prim.State# GHC.Prim.RealWorld>_R
                                   ->_R ((#,#)
                                           <'GHC.Types.TupleRep '[]>_R
                                           <'GHC.Types.LiftedRep>_R
                                           <GHC.Prim.State# GHC.Prim.RealWorld>_R
                                           ((,)
                                              <()>_R
                                              ([(Test.Hspec.Core.Tree.Tree
                                                   (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                                                    ->_R <GHC.Types.IO ()>_R)
                                                   (Test.Hspec.Core.Tree.Item
                                                      (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R)_R)_R))))
                   Main.main7) -}
07992e69c91f444e98593517fb9c79f5
  main60 :: GHC.Maybe.Maybe Test.Hspec.Core.Example.Location.Location
  {- Unfolding: (Test.Hspec.Core.Tree.location11 Main.main61) -}
ce924c69c06cbd00e69b3ba973c7bf92
  main61 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.location1
                   Main.main62) -}
6a73c5a2ae6500de5502d80742060a58
  main62 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem14
                   Test.Hspec.Core.Tree.specItem11
                   Main.main63) -}
22d536058063932f09ca015420a2263c
  main63 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.fit12
                   Test.Hspec.Core.Spec.fit8
                   Main.main64) -}
9e8f6aa9cc063883c7ee0c2f017e9f8d
  main64 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main65
                   GHC.Stack.Types.EmptyCallStack) -}
563d892ce7dc4dca88c1ae38f2aa88b8
  main65 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main42
                   Main.main67
                   Main.main40
                   Main.main67
                   Main.main66) -}
36401ff08e5b2650485ab657e1cfff3e
  main66 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 25#) -}
39e627e20866d1649186f8ca7aa5b665
  main67 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 56#) -}
7c22e21c6c31fca6dc99b598a3fb9bc5
  main68 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main71
                   Main.main69) -}
b2a0a6838ba5e7865b0b4d32cce65c33
  main69 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main70) -}
446dfaee61a6992c6e5ade37135f56e0
  main7 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main259
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (<GHC.Prim.State# GHC.Prim.RealWorld>_R
                                   ->_R ((#,#)
                                           <'GHC.Types.TupleRep '[]>_R
                                           <'GHC.Types.LiftedRep>_R
                                           <GHC.Prim.State# GHC.Prim.RealWorld>_R
                                           ((,)
                                              <()>_R
                                              ([(Test.Hspec.Core.Tree.Tree
                                                   (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                                                    ->_R <GHC.Types.IO ()>_R)
                                                   (Test.Hspec.Core.Tree.Item
                                                      (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R)_R)_R))))
                   Main.main8) -}
d45480a3f41d21a73797752aa5889027
  main70 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("eep non-strict"#) -}
e8e807ebc817e03513b755fa6a708c31
  main71 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'k'#) -}
49f779ed12f39ada9d3c57d29d4060b6
  main72 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main73
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
8c691f84e8c4fca7dcf86e1dc96b97d6
  main73 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main74) -}
8810533065f91986cde74fd44c94a637
  main74 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main113
                   Main.main106
                   (GHC.Maybe.Nothing @ GHC.Types.Bool)
                   GHC.Types.False
                   Main.main75
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Test.Hspec.Core.Example.Result>_R))) -}
1d5b38ba23a62bd0dfd23be81b9afdd3
  main75 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   ((<Test.Hspec.Expectations.Expectation>_R
                     ->_R <Test.Hspec.Core.Example.Params>_R
                     ->_R <(Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation
                            -> GHC.Types.IO ())
                           -> GHC.Types.IO ()>_R
                     ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Test.Hspec.Core.Example.Result>_R)) ; Sym (Test.Hspec.Core.Example.N:Example[0]
                                                                                   <Test.Hspec.Expectations.Expectation>_N))
                   Main.main76 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
af7f099f8d0768a6c354b5924afc64e9
  main76 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Classes.$fEq[]_$s$c==1 Main.main_w2 Main.main90 of wild {
                   GHC.Types.False
                   -> case Test.HUnit.Lang.assertEqual_go
                             Main.main_expectedMsg2 of wild2 { () ->
                      case Main.main_w2 of wild1 {
                        []
                        -> case Test.HUnit.Lang.assertEqual_go
                                  Main.main_expectedMsg of wild3 { () ->
                           Main.main77 eta2 Main.main_expectedMsg }
                        : x xs
                        -> let {
                             actualMsg :: GHC.Base.String
                             = GHC.Show.showLitString
                                 x
                                 (GHC.Types.:
                                    @ GHC.Types.Char
                                    GHC.Show.$fShow(,)3
                                    (Main.main_showl xs))
                           } in
                           let {
                             actualMsg1 :: [GHC.Types.Char]
                             = GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)3 actualMsg
                           } in
                           let {
                             actualMsg2 :: GHC.Base.String
                             = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__3 actualMsg1
                           } in
                           case Test.HUnit.Lang.assertEqual_go actualMsg2 of wild3 { () ->
                           Main.main77 eta2 actualMsg2 } } }
                   GHC.Types.True -> (# eta2, GHC.Tuple.() #) }) -}
c2d23ac325b71046bd8b06d868a67d06
  main77 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> GHC.Base.String -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <B,U><B,U>x -}
b52662f6c7f45f6bf9cb354497b7a90b
  main78 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.$fShow(,)3
                   Main.main79) -}
3d71f309bc43198f071c53fe95d562c6
  main79 :: GHC.Base.String
  {- Unfolding: (GHC.Show.showLitString Main.main88 Main.main80) -}
2a730792fc748b34b570b8639dfa3d91
  main8 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main242
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (<GHC.Prim.State# GHC.Prim.RealWorld>_R
                                   ->_R ((#,#)
                                           <'GHC.Types.TupleRep '[]>_R
                                           <'GHC.Types.LiftedRep>_R
                                           <GHC.Prim.State# GHC.Prim.RealWorld>_R
                                           ((,)
                                              <()>_R
                                              ([(Test.Hspec.Core.Tree.Tree
                                                   (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                                                    ->_R <GHC.Types.IO ()>_R)
                                                   (Test.Hspec.Core.Tree.Item
                                                      (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R)_R)_R))))
                   Main.main9) -}
f089d375cbff393dcbae4c37c13639a2
  main80 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.$fShow(,)3
                   Main.main81) -}
1aecbd7e43db6e9bfb6bfb6873cd0bd2
  main81 :: GHC.Base.String
  {- Unfolding: (Main.main_showl Main.main82) -}
b4f3754dc9062068c4fd0ff5eda8a77e
  main82 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.main86
                   Main.main83) -}
0b7e7be76e66db542e76a6595c11b630
  main83 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.main84
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
99c4e9d6c48def3da0102dede49a226f
  main84 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main85) -}
3219171cf7c2d4133ba77b4630481056
  main85 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("cherimoya"#) -}
42c012f4ccaf718bdb28fe3888fab4cf
  main86 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main87) -}
aa3fe34552d5b63308d2f5985e43cbb8
  main87 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("banana"#) -}
4c82ce503e222ed607f7d3666b415bfd
  main88 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main89) -}
efb4d60016560ccae01a68d9e8130750
  main89 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("apple"#) -}
8d8b05c4baf4c640fc8491b300906eed
  main9 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main218
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (<GHC.Prim.State# GHC.Prim.RealWorld>_R
                                   ->_R ((#,#)
                                           <'GHC.Types.TupleRep '[]>_R
                                           <'GHC.Types.LiftedRep>_R
                                           <GHC.Prim.State# GHC.Prim.RealWorld>_R
                                           ((,)
                                              <()>_R
                                              ([(Test.Hspec.Core.Tree.Tree
                                                   (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                                                    ->_R <GHC.Types.IO ()>_R)
                                                   (Test.Hspec.Core.Tree.Item
                                                      (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R)_R)_R))))
                   Main.main10) -}
241bda6d3378b09faa0d7d6c916e4f77
  main90 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.main88
                   Main.main82) -}
c0bddf4ef051ca60d0040b8564ab1cb5
  main91 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.main88
                   Main.main92) -}
b9957a45575bd4eb285bf092ca2b78a8
  main92 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.main101
                   Main.main93) -}
ee5cb6f3b245e41468ecd54491fa1335
  main93 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.main86
                   Main.main94) -}
7eb000479e1ef6d954d864428bc1fc58
  main94 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.main99
                   Main.main95) -}
27462b832d972b4ad4a7ccf757dd04f3
  main95 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.main84
                   Main.main96) -}
17456ade336458195abb11b08258591d
  main96 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.main97
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
5add2e63a5413a3ebd72154626701574
  main97 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main98) -}
c80b67b4de377821b11a1f13a468efe0
  main98 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("zealot"#) -}
00273add0ac7bb5166eddb3335976ccd
  main99 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main100) -}
c4c915e8f6f64207b68104c1ba3d4b43
  main_expectedMsg :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   GHC.Show.showList__4
                   (GHC.Types.[] @ GHC.Types.Char)) -}
f3b5b5db4d774156d75bad49d082594e
  main_expectedMsg1 :: GHC.Base.String
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.showList__3
                   Main.main23) -}
3f1924d4a33f60372c3f588f69eb38b8
  main_expectedMsg2 :: GHC.Base.String
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.showList__3
                   Main.main78) -}
95c4c2ca51e8b3bc23e5099b2ee6f6f4
  main_expectedMsg3 :: GHC.Base.String
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.showList__3
                   Main.main224) -}
0e02d542d39458d788827ab875abd49b
  main_showl :: [[GHC.Types.Char]] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>m2 -}
ae346a4f2efbe32db7ec0a30a2029493
  main_showl1 :: [GHC.Types.Int] -> GHC.Base.String
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m2 -}
65ba0c8862144123bbabb444c204022f
  main_w1 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.List.$wunsafeTake
                   @ [GHC.Types.Char]
                   1#
                   (Strain.keep @ [GHC.Types.Char] Main.main32 Main.main58)) -}
2ee2b6be1bb2b9d75c341938a05c2983
  main_w10 :: [GHC.Types.Int]
  {- Unfolding: (Strain.keep
                   @ GHC.Types.Int
                   Main.$seven
                   Main.main153) -}
0dd820957f463cb72ecca1943bf8b74a
  main_w11 :: [GHC.Types.Int]
  {- Unfolding: (Strain.keep
                   @ GHC.Types.Int
                   Main.main297
                   Main.main127) -}
5d21adafdf5a2f557a63e78a3d428710
  main_w12 :: [GHC.Types.Int]
  {- Unfolding: (Strain.keep
                   @ GHC.Types.Int
                   Main.main297
                   (GHC.Types.[] @ GHC.Types.Int)) -}
a09e26270ded20cde836f511ea7b1714
  main_w2 :: [[GHC.Types.Char]]
  {- Unfolding: (Strain.keep
                   @ [GHC.Types.Char]
                   Main.main103
                   Main.main91) -}
d84b3cc0dc0f39fa78b6c1197755baf3
  main_w3 :: [GHC.Types.Int]
  {- Unfolding: (Strain.keep
                   @ GHC.Types.Int
                   Main.main130
                   Main.main127) -}
d5659210ecf0bf38b01ac26963c74a88
  main_w4 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.List.$wunsafeTake
                   @ [GHC.Types.Char]
                   1#
                   (Strain.keep @ [GHC.Types.Char] Main.main32 Main.main30)) -}
4d6efd6a2eb6f2328217232ff593996f
  main_w5 :: [GHC.Types.Int]
  {- Unfolding: (Strain.keep
                   @ GHC.Types.Int
                   Main.main130
                   Main.main153) -}
cf36af468695fa693d7ee7250eebaf9a
  main_w6 :: [GHC.Types.Int]
  {- Unfolding: (Strain.keep
                   @ GHC.Types.Int
                   Main.$seven
                   Main.main127) -}
580b596a4823cb5b95ed3e5725d9f245
  main_w7 :: [GHC.Types.Int]
  {- Unfolding: (Strain.keep
                   @ GHC.Types.Int
                   Main.main189
                   Main.main127) -}
f4b47ce52b3889ffad3e33dca64d168c
  main_w8 :: [GHC.Types.Int]
  {- Unfolding: (Strain.keep
                   @ GHC.Types.Int
                   Main.main189
                   (GHC.Types.[] @ GHC.Types.Int)) -}
accd0d586ea8d875844667f824aa419e
  main_w9 :: [[GHC.Types.Char]]
  {- Unfolding: (Strain.keep
                   @ [GHC.Types.Char]
                   Main.main230
                   Main.main91) -}
"SPEC/Main even @ Int" [orphan] forall ($dIntegral :: GHC.Real.Integral
                                                        GHC.Types.Int)
  GHC.Real.even @ GHC.Types.Int $dIntegral = Main.$seven
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

