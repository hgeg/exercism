
==================== FINAL INTERFACE ====================
2019-04-26 10:35:41.459408017 UTC

interface word-count-1.2.0.6-4K2VJY47Zx73upBHGwplBp:WordCount 8063
  interface hash: cb6917630c15daa554b7a71812cfc01b
  ABI hash: 90d771fe2003cd84868775407e4be926
  export-list hash: 24924d50621ddf2734b203f4e8541358
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: d59a86fc39dabe8754ebbfb830e37f1e
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  WordCount.wordCount
module dependencies:
package dependencies: base-4.12.0.0* ghc-prim-0.5.3
                      integer-gmp-1.0.2.0
orphans: base-4.12.0.0:GHC.Float base-4.12.0.0:GHC.Base
family instance modules: base-4.12.0.0:Control.Applicative
                         base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity base-4.12.0.0:Data.Monoid
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:GHC.Generics
                         base-4.12.0.0:GHC.IO.Exception
import  -/  base-4.12.0.0:Data.Char 0f6e335e98e2ddac4f2764f212d2f08a
import  -/  base-4.12.0.0:Data.Foldable 00188ddf89c975fee76bdfad479443c1
import  -/  base-4.12.0.0:Data.OldList c2cab40fed7d27b5e717779f9a3c09ea
import  -/  base-4.12.0.0:GHC.Base cc906f98291a1b830546e99a96674547
import  -/  base-4.12.0.0:GHC.List 734a72beb76d276fb4a0ba2689a5711f
import  -/  base-4.12.0.0:GHC.Num 847723f2584d989dac1eada133ac3fb8
import  -/  base-4.12.0.0:GHC.Unicode e72f63c0b07b1495548f1f84ce6c22b5
import  -/  base-4.12.0.0:Prelude 5c01365ec01f83bd405ac01cbb9a8d76
import  -/  ghc-prim-0.5.3:GHC.Classes e0d9c979f6368701f34fa421754d2cce
229f61b0a63f72fc2ae3d7d770b5dbe9
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   WordCount.$trModule3
                   WordCount.$trModule1) -}
552c38b4ae29fc9897e55243e6f42932
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS WordCount.$trModule2) -}
0fea335bb2902960072cbbbf44338b99
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("WordCount"#) -}
eca2a46fa9004c767a57085c4065788d
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS WordCount.$trModule4) -}
b859a93c10d4f91d94b407bf1f79fc36
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("word-count-1.2.0.6-4K2VJY47Zx73upBHGwplBp"#) -}
fc8bcea297d0fb944432bfa5407c0233
  $wg :: GHC.Prim.Char# -> GHC.Prim.Char#
  {- Arity: 1, Strictness: <S,1*U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Char#) ->
                 case ww of wild {
                   DEFAULT
                   -> case {__pkg_ccall base-4.12.0.0 GHC.Prim.Int#
                                                      -> GHC.Prim.State# GHC.Prim.RealWorld
                                                      -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                            GHC.Prim.Int# #)}
                             (GHC.Prim.ord# wild)
                             GHC.Prim.realWorld# of wild1 { (#,#) ds ds1 ->
                      case GHC.Prim.leWord# (GHC.Prim.int2Word# ds1) 1114111## of lwild {
                        DEFAULT -> case GHC.Char.$wlvl ds1 ret_ty GHC.Prim.Char# of {}
                        1# -> GHC.Prim.chr# ds1 } }
                   ','# -> ' '# }) -}
52adb1bf5c43503c64c39bf77271cc87
  enumerate ::
    [GHC.Base.String] -> [(GHC.Base.String, GHC.Types.Int)]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
6440176f2be077b2e4c482f1d9db6803
  wordCount :: GHC.Base.String -> [(GHC.Base.String, GHC.Types.Int)]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: [GHC.Types.Char]) ->
                 WordCount.enumerate
                   (WordCount.wordCount_go
                      (GHC.Base.map
                         @ GHC.Types.Char
                         @ GHC.Types.Char
                         WordCount.wordCount1
                         x))) -}
1ef121c5eb5fedbc1f16b24bf6227c4e
  wordCount1 :: GHC.Types.Char -> GHC.Types.Char
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>m, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Char) ->
                 case w of ww { GHC.Types.C# ww1 ->
                 case WordCount.$wg ww1 of ww2 { DEFAULT -> GHC.Types.C# ww2 } }) -}
0dc63ede7eb139cb160aa865157a9099
  wordCount_go :: [GHC.Types.Char] -> [[GHC.Types.Char]]
  {- Arity: 1, Strictness: <S,1*U> -}
trusted: safe
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

